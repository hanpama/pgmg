// Code generated by github.com/hanpama/pgmg. DO NOT EDIT.
package shippers

func Insert(vss ...Values) Query {
	return Query{InsertSQL, []interface{}{string(mustMarshalJSON(vss))}}
}
func InsertReturning(vss ...Values) Query {
	return Query{InsertReturningSQL, []interface{}{string(mustMarshalJSON(vss))}}
}
func Select(k key) Query {
	return k.selectSQL()
}
func Update(k key, args ...attribute) Query {
	return k.updateSQL(args...)
}
func Delete(k key) Query {
	return k.deleteSQL()
}

const (
	InsertSQL = `
		INSERT INTO "shippers"
		SELECT * FROM json_populate_recordset(null::"shippers", $1) `
	InsertReturningSQL = `
		INSERT INTO "shippers"
		SELECT * FROM json_populate_recordset(null::"shippers", $1)
		RETURNING *`
)

func (k PkShippers) selectSQL() Query {
	return Query{SelectPkShippers, []interface{}{
		k.ShipperID,
	}}
}
func (k PkShippers) updateSQL(args ...attribute) Query {
	return Query{UpdatePkShippers, []interface{}{
		k.ShipperID,
		string(mustMarshalJSON(Values(args))),
	}}
}
func (k PkShippers) deleteSQL() Query {
	return Query{DeletePkShippers, []interface{}{
		k.ShipperID,
	}}
}

const (
	SelectPkShippers = `
		SELECT * FROM "shippers" WHERE ("shippers"."shipper_id") = ($1) LIMIT 1
		`
	UpdatePkShippers = `
		UPDATE "shippers"
		SET "shipper_id" = COALESCE(_ch."shipper_id", "shippers"."shipper_id"),
			"company_name" = COALESCE(_ch."company_name", "shippers"."company_name"),
			"phone" = COALESCE(_ch."phone", "shippers"."phone")
		FROM (SELECT * FROM json_populate_record(null::"shippers", $2)) _ch
		WHERE ("shippers"."shipper_id") = ($1)`
	DeletePkShippers = `
		DELETE FROM "shippers"
		WHERE ("shippers"."shipper_id") = ($1)`
)

type key interface {
	selectSQL() Query
	updateSQL(args ...attribute) Query
	deleteSQL() Query
}

type Query struct {
	sql  string
	args []interface{}
}

func (q Query) SQL() string         { return q.sql }
func (q Query) Args() []interface{} { return q.args }
