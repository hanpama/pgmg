// Code generated by github.com/hanpama/pgmg. DO NOT EDIT.
package products

func Insert(vss ...Values) Query {
	return Query{InsertSQL, []interface{}{string(mustMarshalJSON(vss))}}
}
func InsertReturning(vss ...Values) Query {
	return Query{InsertReturningSQL, []interface{}{string(mustMarshalJSON(vss))}}
}
func Select(k key) Query {
	return k.selectSQL()
}
func Update(k key, args ...attribute) Query {
	return k.updateSQL(args...)
}
func Delete(k key) Query {
	return k.deleteSQL()
}

const (
	InsertSQL = `
		INSERT INTO "products"
		SELECT * FROM json_populate_recordset(null::"products", $1) `
	InsertReturningSQL = `
		INSERT INTO "products"
		SELECT * FROM json_populate_recordset(null::"products", $1)
		RETURNING *`
)

func (k PkProducts) selectSQL() Query {
	return Query{SelectPkProducts, []interface{}{
		k.ProductID,
	}}
}
func (k PkProducts) updateSQL(args ...attribute) Query {
	return Query{UpdatePkProducts, []interface{}{
		k.ProductID,
		string(mustMarshalJSON(Values(args))),
	}}
}
func (k PkProducts) deleteSQL() Query {
	return Query{DeletePkProducts, []interface{}{
		k.ProductID,
	}}
}

const (
	SelectPkProducts = `
		SELECT * FROM "products" WHERE ("products"."product_id") = ($1) LIMIT 1
		`
	UpdatePkProducts = `
		UPDATE "products"
		SET "product_id" = COALESCE(_ch."product_id", "products"."product_id"),
			"product_name" = COALESCE(_ch."product_name", "products"."product_name"),
			"supplier_id" = COALESCE(_ch."supplier_id", "products"."supplier_id"),
			"category_id" = COALESCE(_ch."category_id", "products"."category_id"),
			"quantity_per_unit" = COALESCE(_ch."quantity_per_unit", "products"."quantity_per_unit"),
			"unit_price" = COALESCE(_ch."unit_price", "products"."unit_price"),
			"units_in_stock" = COALESCE(_ch."units_in_stock", "products"."units_in_stock"),
			"units_on_order" = COALESCE(_ch."units_on_order", "products"."units_on_order"),
			"reorder_level" = COALESCE(_ch."reorder_level", "products"."reorder_level"),
			"discontinued" = COALESCE(_ch."discontinued", "products"."discontinued")
		FROM (SELECT * FROM json_populate_record(null::"products", $2)) _ch
		WHERE ("products"."product_id") = ($1)`
	DeletePkProducts = `
		DELETE FROM "products"
		WHERE ("products"."product_id") = ($1)`
)

type key interface {
	selectSQL() Query
	updateSQL(args ...attribute) Query
	deleteSQL() Query
}

type Query struct {
	sql  string
	args []interface{}
}

func (q Query) SQL() string         { return q.sql }
func (q Query) Args() []interface{} { return q.args }
