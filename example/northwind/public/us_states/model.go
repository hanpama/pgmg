// Code generated by github.com/hanpama/pgmg. DO NOT EDIT.
package us_states

import (
	"encoding/json"
)

type Record struct {
	StateID     int16   `json:"state_id"`
	StateName   *string `json:"state_name"`
	StateAbbr   *string `json:"state_abbr"`
	StateRegion *string `json:"state_region"`
}

type PkUsstates struct {
	StateID int16 `json:"state_id"`
}

type StateID int16
type StateName string
type StateAbbr string
type StateRegion string

func (r *Record) Receive() []interface{} {
	return []interface{}{
		&r.StateID, &r.StateName, &r.StateAbbr, &r.StateRegion,
	}
}

type Recordset []Record

func (rs *Recordset) ReceiveNext() []interface{} {
	*rs = append(*rs, Record{})
	return (*rs)[len(*rs)-1].Receive()
}

type Values []attribute

func InputValues(
	stateID StateID,
	stateName StateName,
	stateAbbr StateAbbr,
	stateRegion StateRegion,
	attrs ...attribute,
) Values {
	return append(Values{stateID, stateName, stateAbbr, stateRegion}, attrs...)
}
func (vs Values) ApplyTo(r *Record) {
	for _, v := range vs {
		v.ApplyTo(r)
	}
}

func (vs Values) MarshalJSON() (b []byte, err error) {
	r := make(map[string]interface{})
	for _, v := range vs {
		r[v.Column()] = v.Value()
	}
	return json.Marshal(r)
}

type attribute interface {
	ApplyTo(*Record)
	Column() string
	Value() interface{}
}

func (v StateID) ApplyTo(r *Record)      { r.StateID = (int16)(v) }
func (v StateID) Column() string         { return "state_id" }
func (v StateID) Value() interface{}     { return (int16)(v) }
func (v StateName) ApplyTo(r *Record)    { r.StateName = (*string)(&v) }
func (v StateName) Column() string       { return "state_name" }
func (v StateName) Value() interface{}   { return (string)(v) }
func (v StateAbbr) ApplyTo(r *Record)    { r.StateAbbr = (*string)(&v) }
func (v StateAbbr) Column() string       { return "state_abbr" }
func (v StateAbbr) Value() interface{}   { return (string)(v) }
func (v StateRegion) ApplyTo(r *Record)  { r.StateRegion = (*string)(&v) }
func (v StateRegion) Column() string     { return "state_region" }
func (v StateRegion) Value() interface{} { return (string)(v) }

func mustMarshalJSON(v interface{}) []byte {
	b, err := json.Marshal(v)
	if err != nil {
		panic(err)
	}
	return b
}
