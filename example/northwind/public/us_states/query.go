// Code generated by github.com/hanpama/pgmg. DO NOT EDIT.
package us_states

func Insert(vss ...Values) Query {
	return Query{InsertSQL, []interface{}{string(mustMarshalJSON(vss))}}
}
func InsertReturning(vss ...Values) Query {
	return Query{InsertReturningSQL, []interface{}{string(mustMarshalJSON(vss))}}
}
func Select(k key) Query {
	return k.selectSQL()
}
func Update(k key, args ...attribute) Query {
	return k.updateSQL(args...)
}
func Delete(k key) Query {
	return k.deleteSQL()
}

const (
	InsertSQL = `
		INSERT INTO "us_states"
		SELECT * FROM json_populate_recordset(null::"us_states", $1) `
	InsertReturningSQL = `
		INSERT INTO "us_states"
		SELECT * FROM json_populate_recordset(null::"us_states", $1)
		RETURNING *`
)

func (k PkUsstates) selectSQL() Query {
	return Query{SelectPkUsstates, []interface{}{
		k.StateID,
	}}
}
func (k PkUsstates) updateSQL(args ...attribute) Query {
	return Query{UpdatePkUsstates, []interface{}{
		k.StateID,
		string(mustMarshalJSON(Values(args))),
	}}
}
func (k PkUsstates) deleteSQL() Query {
	return Query{DeletePkUsstates, []interface{}{
		k.StateID,
	}}
}

const (
	SelectPkUsstates = `
		SELECT * FROM "us_states" WHERE ("us_states"."state_id") = ($1) LIMIT 1
		`
	UpdatePkUsstates = `
		UPDATE "us_states"
		SET "state_id" = COALESCE(_ch."state_id", "us_states"."state_id"),
			"state_name" = COALESCE(_ch."state_name", "us_states"."state_name"),
			"state_abbr" = COALESCE(_ch."state_abbr", "us_states"."state_abbr"),
			"state_region" = COALESCE(_ch."state_region", "us_states"."state_region")
		FROM (SELECT * FROM json_populate_record(null::"us_states", $2)) _ch
		WHERE ("us_states"."state_id") = ($1)`
	DeletePkUsstates = `
		DELETE FROM "us_states"
		WHERE ("us_states"."state_id") = ($1)`
)

type key interface {
	selectSQL() Query
	updateSQL(args ...attribute) Query
	deleteSQL() Query
}

type Query struct {
	sql  string
	args []interface{}
}

func (q Query) SQL() string         { return q.sql }
func (q Query) Args() []interface{} { return q.args }
