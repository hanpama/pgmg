// Code generated by github.com/hanpama/pgmg. DO NOT EDIT.
package employees

func Insert(vss ...Values) Query {
	return Query{InsertSQL, []interface{}{string(mustMarshalJSON(vss))}}
}
func InsertReturning(vss ...Values) Query {
	return Query{InsertReturningSQL, []interface{}{string(mustMarshalJSON(vss))}}
}
func Select(k key) Query {
	return k.selectSQL()
}
func Update(k key, args ...attribute) Query {
	return k.updateSQL(args...)
}
func Delete(k key) Query {
	return k.deleteSQL()
}

const (
	InsertSQL = `
		INSERT INTO "employees"
		SELECT * FROM json_populate_recordset(null::"employees", $1) `
	InsertReturningSQL = `
		INSERT INTO "employees"
		SELECT * FROM json_populate_recordset(null::"employees", $1)
		RETURNING *`
)

func (k PkEmployees) selectSQL() Query {
	return Query{SelectPkEmployees, []interface{}{
		k.EmployeeID,
	}}
}
func (k PkEmployees) updateSQL(args ...attribute) Query {
	return Query{UpdatePkEmployees, []interface{}{
		k.EmployeeID,
		string(mustMarshalJSON(Values(args))),
	}}
}
func (k PkEmployees) deleteSQL() Query {
	return Query{DeletePkEmployees, []interface{}{
		k.EmployeeID,
	}}
}

const (
	SelectPkEmployees = `
		SELECT * FROM "employees" WHERE ("employees"."employee_id") = ($1) LIMIT 1
		`
	UpdatePkEmployees = `
		UPDATE "employees"
		SET "employee_id" = COALESCE(_ch."employee_id", "employees"."employee_id"),
			"last_name" = COALESCE(_ch."last_name", "employees"."last_name"),
			"first_name" = COALESCE(_ch."first_name", "employees"."first_name"),
			"title" = COALESCE(_ch."title", "employees"."title"),
			"title_of_courtesy" = COALESCE(_ch."title_of_courtesy", "employees"."title_of_courtesy"),
			"birth_date" = COALESCE(_ch."birth_date", "employees"."birth_date"),
			"hire_date" = COALESCE(_ch."hire_date", "employees"."hire_date"),
			"address" = COALESCE(_ch."address", "employees"."address"),
			"city" = COALESCE(_ch."city", "employees"."city"),
			"region" = COALESCE(_ch."region", "employees"."region"),
			"postal_code" = COALESCE(_ch."postal_code", "employees"."postal_code"),
			"country" = COALESCE(_ch."country", "employees"."country"),
			"home_phone" = COALESCE(_ch."home_phone", "employees"."home_phone"),
			"extension" = COALESCE(_ch."extension", "employees"."extension"),
			"photo" = COALESCE(_ch."photo", "employees"."photo"),
			"notes" = COALESCE(_ch."notes", "employees"."notes"),
			"reports_to" = COALESCE(_ch."reports_to", "employees"."reports_to"),
			"photo_path" = COALESCE(_ch."photo_path", "employees"."photo_path")
		FROM (SELECT * FROM json_populate_record(null::"employees", $2)) _ch
		WHERE ("employees"."employee_id") = ($1)`
	DeletePkEmployees = `
		DELETE FROM "employees"
		WHERE ("employees"."employee_id") = ($1)`
)

type key interface {
	selectSQL() Query
	updateSQL(args ...attribute) Query
	deleteSQL() Query
}

type Query struct {
	sql  string
	args []interface{}
}

func (q Query) SQL() string         { return q.sql }
func (q Query) Args() []interface{} { return q.args }
