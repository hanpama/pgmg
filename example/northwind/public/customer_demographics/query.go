// Code generated by github.com/hanpama/pgmg. DO NOT EDIT.
package customer_demographics

func Insert(vss ...Values) Query {
	return query{InsertSQL, []interface{}{string(mustMarshalJSON(vss))}}
}
func InsertReturning(vss ...Values) Query {
	return query{InsertReturningSQL, []interface{}{string(mustMarshalJSON(vss))}}
}
func Select(k key) Query {
	return k.selectSQL()
}
func Update(k key, args ...attribute) Query {
	return k.updateSQL(args...)
}
func Delete(k key) Query {
	return k.deleteSQL()
}

const (
	InsertSQL = `
		INSERT INTO "public"."customer_demographics" (
			"customer_type_id",
			"customer_desc"
		)
		SELECT
			"customer_type_id",
			"customer_desc"
		FROM json_populate_recordset(null::"public"."customer_demographics", $1)`
	InsertReturningSQL = `
		INSERT INTO "public"."customer_demographics" (
			"customer_type_id",
			"customer_desc"
		)
		SELECT
			"customer_type_id",
			"customer_desc"
		FROM json_populate_recordset(null::"public"."customer_demographics", $1)
		RETURNING
			"customer_type_id",
			"customer_desc"`
)

func (k PkCustomerDemographics) selectSQL() Query {
	return selectPkCustomerDemographicsQuery{k}
}
func (k PkCustomerDemographics) updateSQL(args ...attribute) Query {
	return query{UpdatePkCustomerDemographics, []interface{}{
		k.CustomerTypeID,
		string(mustMarshalJSON(Values(args))),
	}}
}
func (k PkCustomerDemographics) deleteSQL() Query {
	return query{DeletePkCustomerDemographics, []interface{}{
		k.CustomerTypeID,
	}}
}

const (
	SelectPkCustomerDemographics = `
		SELECT 
			"customer_type_id",
			"customer_desc"
		FROM "public"."customer_demographics" WHERE ("customer_type_id") = ($1) LIMIT 1`
	UpdatePkCustomerDemographics = `
		UPDATE "public"."customer_demographics" __ut__
		SET "customer_type_id" = COALESCE(__ch__."customer_type_id", __ut__."customer_type_id"),
			"customer_desc" = COALESCE(__ch__."customer_desc", __ut__."customer_desc")
		FROM (SELECT * FROM json_populate_record(null::"public"."customer_demographics", $2)) __ch__
		WHERE (__ut__."customer_type_id") = ($1)`
	DeletePkCustomerDemographics = `
		DELETE FROM "public"."customer_demographics"
		WHERE ("customer_type_id") = ($1)`
)

type selectPkCustomerDemographicsQuery struct{ key PkCustomerDemographics }

func (q selectPkCustomerDemographicsQuery) SQL() string { return SelectPkCustomerDemographics }
func (q selectPkCustomerDemographicsQuery) Args() []interface{} {
	return []interface{}{q.key.CustomerTypeID}
}

type key interface {
	selectSQL() Query
	updateSQL(args ...attribute) Query
	deleteSQL() Query
}

type Query interface {
	SQL() string
	Args() []interface{}
}

type query struct {
	sql  string
	args []interface{}
}

func (q query) SQL() string         { return q.sql }
func (q query) Args() []interface{} { return q.args }
