// Code generated by github.com/hanpama/pgmg. DO NOT EDIT.
package customers

func Insert(vss ...Values) Query {
	return Query{InsertSQL, []interface{}{string(mustMarshalJSON(vss))}}
}
func InsertReturning(vss ...Values) Query {
	return Query{InsertReturningSQL, []interface{}{string(mustMarshalJSON(vss))}}
}
func Select(k key) Query {
	return k.selectSQL()
}
func Update(k key, args ...attribute) Query {
	return k.updateSQL(args...)
}
func Delete(k key) Query {
	return k.deleteSQL()
}

const (
	InsertSQL = `
		INSERT INTO "customers"
		SELECT * FROM json_populate_recordset(null::"customers", $1) `
	InsertReturningSQL = `
		INSERT INTO "customers"
		SELECT * FROM json_populate_recordset(null::"customers", $1)
		RETURNING *`
)

func (k PkCustomers) selectSQL() Query {
	return Query{SelectPkCustomers, []interface{}{
		k.CustomerID,
	}}
}
func (k PkCustomers) updateSQL(args ...attribute) Query {
	return Query{UpdatePkCustomers, []interface{}{
		k.CustomerID,
		string(mustMarshalJSON(Values(args))),
	}}
}
func (k PkCustomers) deleteSQL() Query {
	return Query{DeletePkCustomers, []interface{}{
		k.CustomerID,
	}}
}

const (
	SelectPkCustomers = `
		SELECT * FROM "customers" WHERE ("customers"."customer_id") = ($1) LIMIT 1
		`
	UpdatePkCustomers = `
		UPDATE "customers"
		SET "customer_id" = COALESCE(_ch."customer_id", "customers"."customer_id"),
			"company_name" = COALESCE(_ch."company_name", "customers"."company_name"),
			"contact_name" = COALESCE(_ch."contact_name", "customers"."contact_name"),
			"contact_title" = COALESCE(_ch."contact_title", "customers"."contact_title"),
			"address" = COALESCE(_ch."address", "customers"."address"),
			"city" = COALESCE(_ch."city", "customers"."city"),
			"region" = COALESCE(_ch."region", "customers"."region"),
			"postal_code" = COALESCE(_ch."postal_code", "customers"."postal_code"),
			"country" = COALESCE(_ch."country", "customers"."country"),
			"phone" = COALESCE(_ch."phone", "customers"."phone"),
			"fax" = COALESCE(_ch."fax", "customers"."fax")
		FROM (SELECT * FROM json_populate_record(null::"customers", $2)) _ch
		WHERE ("customers"."customer_id") = ($1)`
	DeletePkCustomers = `
		DELETE FROM "customers"
		WHERE ("customers"."customer_id") = ($1)`
)

type key interface {
	selectSQL() Query
	updateSQL(args ...attribute) Query
	deleteSQL() Query
}

type Query struct {
	sql  string
	args []interface{}
}

func (q Query) SQL() string         { return q.sql }
func (q Query) Args() []interface{} { return q.args }
