// Code generated by github.com/hanpama/pgmg. DO NOT EDIT.
package order_details

func Insert(vss ...Values) Query {
	return query{InsertSQL, []interface{}{string(mustMarshalJSON(vss))}}
}
func InsertReturning(vss ...Values) Query {
	return query{InsertReturningSQL, []interface{}{string(mustMarshalJSON(vss))}}
}
func Select(k key) Query {
	return k.selectSQL()
}
func Update(k key, args ...attribute) Query {
	return k.updateSQL(args...)
}
func Delete(k key) Query {
	return k.deleteSQL()
}

const (
	InsertSQL = `
		INSERT INTO "public"."order_details" (
			"order_id",
			"product_id",
			"unit_price",
			"quantity",
			"discount"
		)
		SELECT
			"order_id",
			"product_id",
			"unit_price",
			"quantity",
			"discount"
		FROM json_populate_recordset(null::"public"."order_details", $1)`
	InsertReturningSQL = `
		INSERT INTO "public"."order_details" (
			"order_id",
			"product_id",
			"unit_price",
			"quantity",
			"discount"
		)
		SELECT
			"order_id",
			"product_id",
			"unit_price",
			"quantity",
			"discount"
		FROM json_populate_recordset(null::"public"."order_details", $1)
		RETURNING
			"order_id",
			"product_id",
			"unit_price",
			"quantity",
			"discount"`
)

func (k PkOrderDetails) selectSQL() Query {
	return selectPkOrderDetailsQuery{k}
}
func (k PkOrderDetails) updateSQL(args ...attribute) Query {
	return query{UpdatePkOrderDetails, []interface{}{
		k.OrderID,
		k.ProductID,
		string(mustMarshalJSON(Values(args))),
	}}
}
func (k PkOrderDetails) deleteSQL() Query {
	return query{DeletePkOrderDetails, []interface{}{
		k.OrderID,
		k.ProductID,
	}}
}

const (
	SelectPkOrderDetails = `
		SELECT 
			"order_id",
			"product_id",
			"unit_price",
			"quantity",
			"discount"
		FROM "public"."order_details" WHERE ("order_id", "product_id") = ($1, $2) LIMIT 1`
	UpdatePkOrderDetails = `
		UPDATE "public"."order_details" __ut__
		SET "order_id" = COALESCE(__ch__."order_id", __ut__."order_id"),
			"product_id" = COALESCE(__ch__."product_id", __ut__."product_id"),
			"unit_price" = COALESCE(__ch__."unit_price", __ut__."unit_price"),
			"quantity" = COALESCE(__ch__."quantity", __ut__."quantity"),
			"discount" = COALESCE(__ch__."discount", __ut__."discount")
		FROM (SELECT * FROM json_populate_record(null::"public"."order_details", $2)) __ch__
		WHERE (__ut__."order_id", __ut__."product_id") = ($1, $2)`
	DeletePkOrderDetails = `
		DELETE FROM "public"."order_details"
		WHERE ("order_id", "product_id") = ($1, $2)`
)

type selectPkOrderDetailsQuery struct{ key PkOrderDetails }

func (q selectPkOrderDetailsQuery) SQL() string { return SelectPkOrderDetails }
func (q selectPkOrderDetailsQuery) Args() []interface{} {
	return []interface{}{q.key.OrderID, q.key.ProductID}
}

type key interface {
	selectSQL() Query
	updateSQL(args ...attribute) Query
	deleteSQL() Query
}

type Query interface {
	SQL() string
	Args() []interface{}
}

type query struct {
	sql  string
	args []interface{}
}

func (q query) SQL() string         { return q.sql }
func (q query) Args() []interface{} { return q.args }
