// Code generated by github.com/hanpama/pgmg. DO NOT EDIT.
package orders

func Insert(vss ...Values) Query {
	return Query{InsertSQL, []interface{}{string(mustMarshalJSON(vss))}}
}
func InsertReturning(vss ...Values) Query {
	return Query{InsertReturningSQL, []interface{}{string(mustMarshalJSON(vss))}}
}
func Select(k key) Query {
	return k.selectSQL()
}
func Update(k key, args ...attribute) Query {
	return k.updateSQL(args...)
}
func Delete(k key) Query {
	return k.deleteSQL()
}

const (
	InsertSQL = `
		INSERT INTO "orders"
		SELECT * FROM json_populate_recordset(null::"orders", $1) `
	InsertReturningSQL = `
		INSERT INTO "orders"
		SELECT * FROM json_populate_recordset(null::"orders", $1)
		RETURNING *`
)

func (k PkOrders) selectSQL() Query {
	return Query{SelectPkOrders, []interface{}{
		k.OrderID,
	}}
}
func (k PkOrders) updateSQL(args ...attribute) Query {
	return Query{UpdatePkOrders, []interface{}{
		k.OrderID,
		string(mustMarshalJSON(Values(args))),
	}}
}
func (k PkOrders) deleteSQL() Query {
	return Query{DeletePkOrders, []interface{}{
		k.OrderID,
	}}
}

const (
	SelectPkOrders = `
		SELECT * FROM "orders" WHERE ("orders"."order_id") = ($1) LIMIT 1
		`
	UpdatePkOrders = `
		UPDATE "orders"
		SET "order_id" = COALESCE(_ch."order_id", "orders"."order_id"),
			"customer_id" = COALESCE(_ch."customer_id", "orders"."customer_id"),
			"employee_id" = COALESCE(_ch."employee_id", "orders"."employee_id"),
			"order_date" = COALESCE(_ch."order_date", "orders"."order_date"),
			"required_date" = COALESCE(_ch."required_date", "orders"."required_date"),
			"shipped_date" = COALESCE(_ch."shipped_date", "orders"."shipped_date"),
			"ship_via" = COALESCE(_ch."ship_via", "orders"."ship_via"),
			"freight" = COALESCE(_ch."freight", "orders"."freight"),
			"ship_name" = COALESCE(_ch."ship_name", "orders"."ship_name"),
			"ship_address" = COALESCE(_ch."ship_address", "orders"."ship_address"),
			"ship_city" = COALESCE(_ch."ship_city", "orders"."ship_city"),
			"ship_region" = COALESCE(_ch."ship_region", "orders"."ship_region"),
			"ship_postal_code" = COALESCE(_ch."ship_postal_code", "orders"."ship_postal_code"),
			"ship_country" = COALESCE(_ch."ship_country", "orders"."ship_country")
		FROM (SELECT * FROM json_populate_record(null::"orders", $2)) _ch
		WHERE ("orders"."order_id") = ($1)`
	DeletePkOrders = `
		DELETE FROM "orders"
		WHERE ("orders"."order_id") = ($1)`
)

type key interface {
	selectSQL() Query
	updateSQL(args ...attribute) Query
	deleteSQL() Query
}

type Query struct {
	sql  string
	args []interface{}
}

func (q Query) SQL() string         { return q.sql }
func (q Query) Args() []interface{} { return q.args }
