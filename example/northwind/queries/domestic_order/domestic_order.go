// Code Generated by github.com/hanpama/pgmg
package domestic_order

import (
	"time"
)

const SQL = `
SELECT
  orders.order_id,
  orders.order_date,
  orders.shipped_date,
  orders.ship_region,
  orders.ship_country
FROM orders
  INNER JOIN customers ON customers.country = orders.ship_country
WHERE customers.country = $1
ORDER BY orders.shipped_date DESC
LIMIT $2
`

func Query(a1 *string, a2 *int64) query {
	return query{[]interface{}{a1, a2}}
}

type query struct{ args []interface{} }

func (q query) SQL() string         { return SQL }
func (q query) Args() []interface{} { return q.args }

type Record struct {
	OrderID     *int16     `json:"order_id"`
	OrderDate   *time.Time `json:"order_date"`
	ShippedDate *time.Time `json:"shipped_date"`
	ShipRegion  *string    `json:"ship_region"`
	ShipCountry *string    `json:"ship_country"`
}

func (r *Record) Receive() []interface{} {
	return []interface{}{
		&r.OrderID,
		&r.OrderDate,
		&r.ShippedDate,
		&r.ShipRegion,
		&r.ShipCountry,
	}
}

type Recordset []Record

func (rs *Recordset) ReceiveNext() []interface{} {
	*rs = append(*rs, Record{})
	return (*rs)[len(*rs)-1].Receive()
}
