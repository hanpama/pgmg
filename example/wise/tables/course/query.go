// Code generated by github.com/hanpama/pgmg. DO NOT EDIT.
package course

func Insert(vss ...Values) Query {
	return Query{InsertSQL, []interface{}{string(mustMarshalJSON(vss))}}
}
func InsertReturning(vss ...Values) Query {
	return Query{InsertReturningSQL, []interface{}{string(mustMarshalJSON(vss))}}
}
func Select(k key) Query {
	return k.selectSQL()
}
func Update(k key, args ...attribute) Query {
	return k.updateSQL(args...)
}
func Delete(k key) Query {
	return k.deleteSQL()
}

const (
	InsertSQL = `
		INSERT INTO "wise"."course" (
			"id",
			"title",
			"credits"
		)
		SELECT
			COALESCE("id", nextval('wise.course_id_seq'::regclass)),
			"title",
			"credits"
		FROM json_populate_recordset(null::"wise"."course", $1)`
	InsertReturningSQL = `
		INSERT INTO "wise"."course" (
			"id",
			"title",
			"credits"
		)
		SELECT
			COALESCE("id", nextval('wise.course_id_seq'::regclass)),
			"title",
			"credits"
		FROM json_populate_recordset(null::"wise"."course", $1)
		RETURNING
			"id",
			"title",
			"credits"`
)

func (k CoursePkey) selectSQL() Query {
	return Query{SelectCoursePkey, []interface{}{
		k.ID,
	}}
}
func (k CoursePkey) updateSQL(args ...attribute) Query {
	return Query{UpdateCoursePkey, []interface{}{
		k.ID,
		string(mustMarshalJSON(Values(args))),
	}}
}
func (k CoursePkey) deleteSQL() Query {
	return Query{DeleteCoursePkey, []interface{}{
		k.ID,
	}}
}

const (
	SelectCoursePkey = `
		SELECT 
			"id",
			"title",
			"credits"
		FROM "wise"."course" WHERE ("id") = ($1) LIMIT 1`
	UpdateCoursePkey = `
		UPDATE "wise"."course" __ut__
		SET "id" = COALESCE(__ch__."id", __ut__."id"),
			"title" = COALESCE(__ch__."title", __ut__."title"),
			"credits" = COALESCE(__ch__."credits", __ut__."credits")
		FROM (SELECT * FROM json_populate_record(null::"wise"."course", $2)) __ch__
		WHERE (__ut__."id") = ($1)`
	DeleteCoursePkey = `
		DELETE FROM "wise"."course"
		WHERE ("id") = ($1)`
)

type key interface {
	selectSQL() Query
	updateSQL(args ...attribute) Query
	deleteSQL() Query
}

type Query struct {
	sql  string
	args []interface{}
}

func (q Query) SQL() string         { return q.sql }
func (q Query) Args() []interface{} { return q.args }
