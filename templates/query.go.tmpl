{{ define "query" }}
// Code Generated by github.com/hanpama/pgmg
package queries

import "time"

const SQL = `
{{ .SQL }}`

func Query(args Args) query {
	return query{args}
}

type Args struct {
	{{- range $i, $t := .GoParamTypes }}
	{{ goQueryArg $i }} {{ $t }}
	{{- end }}
}

type query struct{ Args }

func (q query) SQL() string         { return SQL }
func (q query) Args() []interface{} {
	return []interface{} {
		{{- range $i, $t := .GoParamTypes -}}
		{{if $i}}, {{end -}}
		q.{{- goQueryArg $i }}
		{{- end -}}
	}
}

type Record struct {
  {{- range $i, $p := .Properties}}
    {{$p.CapitalName}} {{$p.SelectType}} `json:"{{$p.SQLName}}"`
	{{- end}}
}

func (r *Record) Receive() []interface{} {
	return []interface{}{
    {{ range $i, $p := .Properties -}}
		&r.{{$p.CapitalName}},
		{{ end }}
	}
}

type Recordset []Record

func (rs *Recordset) ReceiveNext() []interface{} {
	*rs = append(*rs, Record{})
	return (*rs)[len(*rs)-1].Receive()
}
{{ end }}