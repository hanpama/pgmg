{{- define "table_query" -}}
// Code generated by github.com/hanpama/pgmg. DO NOT EDIT.
package {{ .Name }}

{{ $table := .Name }}
{{ $columns := .Properties }}

func Insert(vss ...Values) Query {
	return Query{InsertSQL, []interface{}{string(mustMarshalJSON(vss))}}
}
func InsertReturning(vss ...Values) Query {
	return Query{InsertReturningSQL, []interface{}{string(mustMarshalJSON(vss))}}
}
func Select(k key) Query {
	return k.selectSQL()
}
func Update(k key, args ...attribute) Query {
	return k.updateSQL(args...)
}
func Delete(k key) Query {
	return k.deleteSQL()
}

const (
	InsertSQL = `
		INSERT INTO "{{ $table }}"
		SELECT * FROM json_populate_recordset(null::"{{ $table }}", $1) `
	InsertReturningSQL = `
		INSERT INTO "{{ $table }}"
		SELECT * FROM json_populate_recordset(null::"{{ $table }}", $1)
		RETURNING *`
)

{{- range $i, $key := .Keys }}

func (k {{$key.CapitalName}}) selectSQL() Query {
	return Query{Select{{$key.CapitalName}}, []interface{}{
		{{- range $i, $e := $key.Properties}}
		k.{{$e.CapitalName}},
		{{- end }}
	}}
}
func (k {{$key.CapitalName}}) updateSQL(args ...attribute) Query {
	return Query{Update{{$key.CapitalName}}, []interface{}{
		{{- range $i, $e := $key.Properties}}
		k.{{$e.CapitalName}},
		{{- end }}
		string(mustMarshalJSON(Values(args))),
	}}
}
func (k {{$key.CapitalName}}) deleteSQL() Query {
	return Query{Delete{{$key.CapitalName}}, []interface{}{
		{{- range $i, $e := $key.Properties}}
		k.{{$e.CapitalName}},
		{{- end }}
	}}
}

const (
	Select{{$key.CapitalName}} = `
		SELECT * FROM "{{ $table }}" WHERE (
			{{- range $i, $p := .Properties -}}
				{{ if $i }}, {{end}}"{{ $table }}"."{{.SQLName}}"
			{{- end -}}
		) = (
			{{- range $i, $p := .Properties -}}
				{{ if $i }}, {{end}}{{ sqlParam $i }}
			{{- end -}}
		) LIMIT 1
		`
	Update{{$key.CapitalName}} = `
		UPDATE "{{ $table }}"
		SET {{ range $i, $p := $columns }}{{ if $i}},
			{{end}}"{{$p.SQLName}}" = COALESCE(_ch."{{$p.SQLName}}", "{{ $table }}"."{{$p.SQLName}}")
		{{- end }}
		FROM (SELECT * FROM json_populate_record(null::"{{ $table }}", $2)) _ch
		WHERE (
			{{- range $i, $p := .Properties -}}
				{{ if $i }}, {{end}}"{{ $table }}"."{{.SQLName}}"
			{{- end -}}
		) = (
			{{- range $i, $p := .Properties -}}
				{{ if $i }}, {{end}}{{ sqlParam $i }}
			{{- end -}}
		)`
	Delete{{$key.CapitalName}} = `
		DELETE FROM "{{ $table }}"
		WHERE (
			{{- range $i, $p := .Properties -}}
				{{ if $i }}, {{end}}"{{ $table }}"."{{.SQLName}}"
			{{- end -}}
		) = (
			{{- range $i, $p := .Properties -}}
				{{ if $i }}, {{end}}{{ sqlParam $i }}
			{{- end -}}
		)`
)

{{ end }}

type key interface {
	selectSQL() Query
	updateSQL(args ...attribute) Query
	deleteSQL() Query
}

type Query struct {
	sql  string
	args []interface{}
}

func (q Query) SQL() string         { return q.sql }
func (q Query) Args() []interface{} { return q.args }

{{ end }}